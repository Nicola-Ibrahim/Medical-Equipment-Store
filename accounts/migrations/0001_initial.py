# Generated by Django 4.1.3 on 2022-11-24 19:52

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254,
                        unique=True,
                        validators=[django.core.validators.EmailValidator()],
                        verbose_name="email address",
                    ),
                ),
                ("phone_number", models.IntegerField(blank=True, null=True)),
                ("state", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("street", models.CharField(blank=True, max_length=50, null=True)),
                ("zipcode", models.IntegerField(blank=True, null=True)),
                ("identification", models.IntegerField(blank=True, null=True)),
                (
                    "type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DOCTOR", "doctor"),
                            ("DELIVERY WORKER", "delivery worker"),
                            ("WAREHOUSE", "warehouse"),
                            ("ADMIN", "admin"),
                            ("STATISTICIAN", "statistician"),
                            ("BASE ACCOUNTANT", "base accountant"),
                            (
                                "DELIVERY WORKER ACCOUNTANT",
                                "delivery worker accountant",
                            ),
                            ("WAREHOUSE ACCOUNTANT", "warehouse accountant"),
                        ],
                        default="ADMIN",
                        max_length=50,
                    ),
                ),
                ("is_verified", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Admin",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="BaseAccountant",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="DeliveryWorker",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="DeliveryWorkerAccountant",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="Statistician",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="WarehouseAccountant",
            fields=[],
            options={"proxy": True, "indexes": [], "constraints": [],},
            bases=("accounts.user",),
        ),
        migrations.CreateModel(
            name="WarehouseProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("service", models.CharField(max_length=200)),
                ("working_hours", models.FloatField()),
                ("sections", models.IntegerField()),
                ("profit_percentage", models.FloatField()),
                (
                    "warehouse",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="warehouse_profile",
                        to="accounts.warehouse",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WarehouseAccountantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "warehouse_accountant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="warehouse_accountant_profile",
                        to="accounts.warehouseaccountant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StatisticianProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "statistician",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statistician_profile",
                        to="accounts.statistician",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DoctorProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "doctor",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to="accounts.doctor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryWorkerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                ("distance", models.FloatField(max_length=200)),
                ("duration", models.FloatField()),
                ("profit_percentage", models.FloatField()),
                ("is_idle", models.BooleanField(default=False)),
                (
                    "delivery_worker",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_worker_profile",
                        to="accounts.deliveryworker",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DeliveryWorkerAccountantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "delivery_worker_accountant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_worker_accountant_profile",
                        to="accounts.deliveryworkeraccountant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="BaseAccountantProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "base_accountant",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="base_accountant_profile",
                        to="accounts.baseaccountant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AdminProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("first_name", models.CharField(max_length=200)),
                ("last_name", models.CharField(max_length=200)),
                (
                    "admin",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="admin_profile",
                        to="accounts.admin",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="user",
            name="manager",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="accounts.admin",
            ),
        ),
    ]
